{"name":"MPM","tagline":"Like npm, but faster - an alternative package manager for Node","body":"[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges)\r\n[![Build Status](https://travis-ci.org/alexanderGugel/mpm.svg)](https://travis-ci.org/alexanderGugel/mpm)\r\n\r\nmpm\r\n===\r\n\r\nAn alternative package manager for Node.\r\n\r\n* blazingly **fast** due to completely concurrent installation procedure and constant (micro) optimizations\r\n* correctly resolves (circular) dependencies\r\n* supports [semver](http://semver.org/)\r\n* correctly handles `devDependencies`\r\n* produces a flat node_modules directory\r\n* verifies the integrity of downloaded packages\r\n* **fast** caching\r\n* interfaces with the [npm registry](https://www.npmjs.org/)\r\n* has no global namespace for packages\r\n* allows you to `require` multiple *versions* of the **same** package\r\n* visually indicates progress via progress bar\r\n* respects your global **configuration**\r\n* can run arbitrary scripts defined in your `package.json` (e.g. `test`)\r\n* supports the usual `install` flags, such as `--save`, `--save-dev`\r\n* allows you to install arbitrary groups of packages, e.g. (`mpm install --only otherDeps`, `mpm install --only prod`)\r\n* useful utilities, such as `ping`, `config`, `ls`\r\n* allows you to easily start a new sub-shell that allows you to use the scripts exposed by your dependencies without installing them globally via `mpm sh`\r\n* supports private registries\r\n* makes it impossible for you to accidentally require sub-dependencies, even though node_modules is completely flat\r\n* completely atomic: `node_modules` is guaranteed to be consistent\r\n\r\nWhy?\r\n----\r\n\r\nThe original idea was to implement npm's pre-v3 install algorithm in as few lines as possible. This goal was achieved in [`c4ba56f`](https://github.com/alexanderGugel/mpm/tree/c4ba56f7dece738db5b8cb28c20c7f6aa1e64d1d).\r\n\r\nCurrently the main goal of this project is to provide a more performant alternative to npm. I like npm, but it's just too slow.\r\n\r\nInstallation\r\n------------\r\n\r\n```\r\n  git clone https://github.com/alexanderGugel/mpm mpm && cd $_ && make install\r\n```\r\n\r\n`mpm` is currently not published to the npm registry, mostly because the name is going to be changed.\r\n\r\nUsage\r\n-----\r\n\r\n```\r\n  mpm is a package manager for Node.\r\n\r\n  Usage:\r\n\r\n    mpm command [arguments]\r\n\r\n  The commands are:\r\n\r\n    install     fetch packages and dependencies\r\n    run         run a package.json script\r\n    test        run the test-suite of the current package\r\n    shell       enter a sub-shell with augmented PATH\r\n    ping        check if the registry is up\r\n    ls          print the dependency graph\r\n    expose      make a sub-dependency `require`able\r\n    config      print the used config\r\n\r\n  Flags:\r\n    -h, --help      show usage information\r\n    -v, --version   print the current version\r\n    -S, --save      update package.json dependencies\r\n    -D, --save-dev  update package.json devDependencies\r\n    -o, --only      install a subset of the dependencies\r\n    -r, --registry  use a custom registry (default: http://registry.npmjs.org/)\r\n\r\n  Example:\r\n    mpm install <pkg>\r\n    mpm install <pkg>@<version>\r\n    mpm install <pkg>@<version range>\r\n\r\n    Can specify one or more: mpm install semver@^5.0.1 tape\r\n    If no argument is supplied, installs dependencies from package.json.\r\n    Sub-commands can also be called via their shorthand aliases.\r\n\r\n  README:  https://github.com/alexanderGugel/mpm\r\n  ISSUES:  https://github.com/alexanderGugel/mpm/issues\r\n```\r\n\r\nCredits\r\n-------\r\n\r\nSome ideas and (upcoming) features of mpm are heavily inspired by [**Nix**](http://nixos.org/nix/), a purely functional package manager.\r\n\r\nTrivia\r\n------\r\n\r\n`mpm` stands for \"**m**ad **p**eople **m**atter\".\r\n\r\nLicense\r\n-------\r\n\r\nLicensed under the MIT license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}